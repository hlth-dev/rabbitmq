name: rabbit-mq docker image CI

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:
  
env:
  IMAGE_NAME: rabbit-mq
  VERSION: "1.0"

jobs:  
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build docker image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      - name: Debug
        run: |
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo GITHUB_RUN_NUMBER=$GITHUB_RUN_NUMBER
          
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION="${VERSION}.${GITHUB_RUN_NUMBER}"
          # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          # [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          # FULL_IMAGE_PATH=$IMAGE_ID:$VERSION
          # echo FULL_IMAGE_PATH=$FULL_IMAGE_PATH
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          
          docker push $IMAGE_ID:$VERSION
